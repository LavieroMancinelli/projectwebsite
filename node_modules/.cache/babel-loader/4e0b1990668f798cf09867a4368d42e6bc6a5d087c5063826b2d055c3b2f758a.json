{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Laviero\\\\Documents\\\\Weather\\\\src\\\\pages\\\\Maze.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generate = dim => {\n  // generate board\n  let boardDim = dim * 2 + 1;\n  let board = [];\n  let walls = [];\n  for (let i = 0; i < boardDim; i++) {\n    let row = [];\n    for (let j = 0; j < boardDim; j++) {\n      if (i == 0 || j == 0 || i == boardDim - 1 || j == boardDim - 1) {\n        row.push(1);\n      } // walls on edges\n      else if (i % 2 == 0 || j % 2 == 0) {\n        row.push(1);\n        walls.push([i, j]);\n      } // walls on even squares\n      else {\n        row.push([0, [[i, j]]]);\n      }\n      ;\n    }\n    board.push(row);\n  }\n  while (walls.length > 0) {\n    let wallI = Math.floor(Math.random * walls.length);\n    let i = walls[wallI][0],\n      j = walls[wallI][1];\n    let adj = [];\n    if (i - 1 > 0 && board[i - 1, j][0] == 0) adj.push([i - 1, j]); // add adj\n    if (j - 1 > 0 && board[i, j - 1][0] == 0) adj.push([i, j - 1]);\n    if (i + 1 < boardDim && board[i + 1, j][0] == 0) adj.push([i + 1, j]);\n    if (j + 1 < boardDim && board[i, j + 1][0] == 0) adj.push([i, j + 1]);\n\n    //let adjI = 0;   // verify adj spaces no duplicate sets\n    let duplicate = false;\n    for (let adjI = 0; adjI < adj.length; adjI++) {\n      for (let adjJ = 0; j < adjJ.length; adjJ++) {\n        if (adjI != adjJ && board[adj[adjI]][1] == board[adj[adjJ]][1]) {\n          duplicate = true;\n          break;\n        }\n      }\n    }\n    if (!duplicate) {\n      // if no adj spaces have dup sets\n      board[i, j][0] = 1; // make this wall a space\n      board[adj[0]][1].push([i, j]); // add wall to adj spaces' sets\n      for (let adjI = 1; adjI < adj.length; adjI++) {\n        // combine sets of adj spaces\n        board[adj[adjI - 1]][1].push.apply(board[adj[adjI - 1]][1], board[adj[adjI]][1]);\n        //adj[adjI-1][1] = adj[adjI-1][1].concat(adj[adjI][1]);\n      }\n      walls.splice(wallI, 1); // remove wall from walls\n    }\n  }\n  return board;\n};\n\n// STORE THE SET IN THE SQUARE\n\n/*\r\nconst generate = (board) => {\r\n    for (i = 0; i < size; i++) {\r\n        for (j = 0; j < size; j++) {\r\n            //\r\n        }\r\n    }\r\n}\r\n*/\n\nfunction Maze({\n  dim\n}) {\n  _s();\n  const [maze, setMaze] = useState([]);\n  const size = 20; // number of rows/columns\n\n  useEffect(() => {\n    const initialMaze = generate(dim);\n    setMaze(initialMaze);\n  }, [dim]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: maze.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '1.5vh',\n          height: '1.5vh',\n          backgroundColor: cell === 1 ? 'black' : 'white'\n          //border: cell === 1 ? '1px solid black' : '1px solid gray'\n        }\n      }, colIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 9\n  }, this);\n}\n_s(Maze, \"COGE/qiQhTKb1veY09SHRhOji0Y=\");\n_c = Maze;\nconst MazeApp = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mazeBox\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Maze Page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Enjoy the maze game!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"startMaze\",\n        onClick: generate,\n        children: \"Generate Maze\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Maze, {\n        dim: 20\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n_c2 = MazeApp;\nexport default MazeApp;\nvar _c, _c2;\n$RefreshReg$(_c, \"Maze\");\n$RefreshReg$(_c2, \"MazeApp\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","generate","dim","boardDim","board","walls","i","row","j","push","length","wallI","Math","floor","random","adj","duplicate","adjI","adjJ","apply","splice","Maze","_s","maze","setMaze","size","initialMaze","children","map","rowIndex","style","display","cell","colIndex","width","height","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_c","MazeApp","className","onClick","_c2","$RefreshReg$"],"sources":["C:/Users/Laviero/Documents/Weather/src/pages/Maze.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst generate = (dim) => {\r\n    // generate board\r\n    let boardDim = dim * 2 + 1;\r\n    let board = [];\r\n    let walls = [];\r\n    for (let i = 0; i < boardDim; i++) {\r\n        let row = [];\r\n        for (let j = 0; j < boardDim; j++) {\r\n            if (i == 0 || j == 0 || i == boardDim - 1 || j == boardDim - 1) {\r\n                    row.push(1);\r\n                } // walls on edges\r\n            else if (i % 2 == 0 || j % 2 == 0) {\r\n                row.push(1);\r\n                walls.push([i,j]);\r\n            } // walls on even squares\r\n            else {\r\n                row.push([0,[[i,j]]]);\r\n            };\r\n        }\r\n        board.push(row);\r\n    } \r\n\r\n    while (walls.length > 0) {\r\n        let wallI = Math.floor(Math.random * walls.length);\r\n        let i = walls[wallI][0], j = walls[wallI][1];\r\n        let adj = [];\r\n        if (i-1>0 && board[i-1,j][0] == 0) adj.push([i-1,j]); // add adj\r\n        if (j-1>0 && board[i,j-1][0] == 0) adj.push([i,j-1]);\r\n        if (i+1<boardDim && board[i+1,j][0] == 0) adj.push([i+1,j]);\r\n        if (j+1<boardDim && board[i,j+1][0] == 0) adj.push([i,j+1]);\r\n\r\n        //let adjI = 0;   // verify adj spaces no duplicate sets\r\n        let duplicate = false;\r\n        for (let adjI = 0; adjI < adj.length; adjI++) \r\n        {\r\n            for (let adjJ = 0; j < adjJ.length; adjJ++) {\r\n                if (adjI != adjJ && board[adj[adjI]][1] == board[adj[adjJ]][1]) {\r\n                    duplicate = true;\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (!duplicate) { // if no adj spaces have dup sets\r\n            board[i,j][0] = 1;  // make this wall a space\r\n            board[adj[0]][1].push([i,j]); // add wall to adj spaces' sets\r\n            for (let adjI = 1; adjI < adj.length; adjI++) { // combine sets of adj spaces\r\n                board[adj[adjI-1]][1].push.apply(board[adj[adjI-1]][1], board[adj[adjI]][1]);\r\n                //adj[adjI-1][1] = adj[adjI-1][1].concat(adj[adjI][1]);\r\n            }\r\n            walls.splice(wallI,1); // remove wall from walls\r\n        }\r\n\r\n    }\r\n    return board;\r\n};\r\n\r\n// STORE THE SET IN THE SQUARE\r\n\r\n/*\r\nconst generate = (board) => {\r\n    for (i = 0; i < size; i++) {\r\n        for (j = 0; j < size; j++) {\r\n            //\r\n        }\r\n    }\r\n}\r\n*/\r\n\r\nfunction Maze({dim}) {\r\n    const [maze, setMaze] = useState([]);\r\n    const size = 20; // number of rows/columns\r\n\r\n    useEffect(() => {\r\n        const initialMaze = generate(dim);\r\n        setMaze(initialMaze);\r\n    }, [dim]);\r\n\r\n    return (\r\n        <div>\r\n            {maze.map((row, rowIndex) => (\r\n                <div key={rowIndex} style={{ display: 'flex' }}>\r\n                    {row.map((cell, colIndex) => (\r\n                        <div key={colIndex} style={{\r\n                            width: '1.5vh',\r\n                            height: '1.5vh',\r\n                            backgroundColor: cell === 1 ? 'black' : 'white',\r\n                            //border: cell === 1 ? '1px solid black' : '1px solid gray'\r\n                        }}></div>\r\n                    ))}\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nconst MazeApp = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"mazeBox\">\r\n                <h1>Maze Page</h1>\r\n                <p>Enjoy the maze game!</p>\r\n                <button className=\"startMaze\" onClick={generate}>Generate Maze</button>\r\n                <Maze dim={20}/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MazeApp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}